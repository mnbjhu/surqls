#V2
define table thing;\n
use ns test
use db test
define table thing;\n
define field some on thing type string;\ndefine field other on thing type int;\n
create thing content {\n  some: "content",\n  other: 123\n}\n;
live select * from thing;
create thing content {\n  some: "content",\n  other: 123\n};\n
kill "57e91317-7583-434f-ac52-a6f3d8dc6c0d";
define table some;\n
use ns test;use db test;
define table some;\n
define field another on some type bool;\n
select "" as some, "" as another\nfrom some\n
define table test;\ndefine field data on test type object;\ndefine field data.first on test type string;\ndefine field data.second on test type string;\n
use ns test; use db test
define table test;\ndefine field data on test type object;\ndefine field data.first on test type string;\ndefine field data.second on test type string;\n
define table test;\ndefine field data on test type object permissions full;\ndefine field data.first on test type string permissions full;\ndefine field data.second on test type string permissions full;\n
use ns test;use db test;
define table test;\ndefine field data on test type object permissions full;\ndefine field data.first on test type string permissions full;\ndefine field data.second on test type string permissions full;\n
return {\n  let $x = 1;\n  return $x;\n};\n
return {\n  let $x = 1;\n};\n
return {\n  let $x = 1;\n  $x;\n};\n
return {\n  $x;\n  let $x = 1;\n  $x;\n};\n
use ns test; use db test;
return {\n  let $x = 1;\n  $x;\n  $x;\n};\n
return {\n  let $x = 1;\n  return $x;\n};\n
return {\n  let $x = 1;\n  let $y = 10;\n  let $z = $x + $y;\n  return $x;\n};\n
return {\n  let $x = 5;\n  let $y = 10;\n  let $z = $x + $y;\n  return $z;\n};\n
let $created = (create todo content { title: "test", description: "test" });\nreturn $created[0].title;\n
use ns test; use db test;
let $created = (create todo content { title: "test", description: "test" });\nreturn $created[0].title;\n
let $created = (create todo content { title: "test", description: "test" });\nreturn $created.title;\n
let $created = (create todo content { \n  title: "test", \n  description: "test",\n  tasks: ["test1", "test2"]\n});\nreturn $created.tasks;\n
let $nested_array_of_obj = [\n  [\n    { test: "data1"},\n    { test: "data2"}\n  ],\n  [\n    { test: "data3"},\n    { test: "data4"}\n  ]\n];\n\nreturn $nested_array_of_obj.test;\n
create some:["first_id", 123];
use ns test
use db test
create some:["first_id", 123];
select * from some
select * from some:['first_id']
select * from some:['first_id', NONE]
select * from some:['first_id', 123]
create other:{test:"thing"}
create other:123
create other:thing
let $id = {test: "thing"}
return $id
select * from ""
use ns test
use db test
select * from ""
return select * from ""
select * from ""
return select * from []
select * from ""
select * from "123"
select * from 123
select * from null
select * from count()
select count() from count()
select count() from ""
select "test" as thing, * from "text"
select *, "other" as thing from "text"
select *, "other" as thing from { first: "thing" }
select *, "other" as thing from { first: "thing" }; return "hello"
create test
return create test
return create test:123
let $test = create test
return $test
let $test = create test:123
let $test = create test:1234
return $test
let $thing = "123"
return $thing
select * from test:123
create test return id
create test return value id
let $arr = [1, 2, 3];
$arr[where true]
$arr[where false]
$arr[where value > 1]
$arr[where $value > 1]
$arr[where $value]
let $arr = [{test: "thing1"}, {test:"thing2"}];
$arr[where test = "thing1"]
select * from todo;
SELECT * FROM person WHERE ->(reacted_to WHERE type='celebrate')->post;
